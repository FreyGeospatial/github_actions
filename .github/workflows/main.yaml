name: My CICD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  determine_environments:
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: "save environments to run"
        id: environment_array
        run: |
          ##################################################
          # This stops prod from running and failing due to
          # branch protections, if running in a branch other 
          # than 'main'.
          
          # For example, 'new-branch' will only run in dev
          # environment.

          ##################################################
          # Get the current Git branch name
          current_branch=$(git rev-parse --abbrev-ref HEAD)


          # Next, we initialize the stringified array based on the current branch.
          # GitHub actions cannot read well arrays from environmental/output variables
          # so we need to stringify them before loading as JSON.
          # jq package seems to be the easiest way to do so.

          # jq comes standard with GitHub Actions. For use on
          # MacOS for local testing, use `brew jq`.

          if [ "$current_branch" == "main" ]; then
              my_array=$(cat lorem.txt | jq -R -s -c 'split(" ")')
          else
              my_array=$(cat lorem.txt | jq -R -s -c 'split(" ")[0:1]')
          fi

          echo my_array=${my_array} >> $GITHUB_OUTPUT
      - name: "return value"
        run: echo ${{ steps.environment_array.outputs.my_array }}
    outputs:
      my_array: ${{ steps.environment_array.outputs.my_array }}

  deploy:
    needs: determine_environments
    uses: ./.github/workflows/full_workflow.yaml
    strategy:
      max-parallel: 1
      matrix:
        environment: ${{ fromJSON(needs.determine_environments.outputs.my_array) }} 
    secrets: inherit
    with:
      environment: ${{ matrix.environment }}


